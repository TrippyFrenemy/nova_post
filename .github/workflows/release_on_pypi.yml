name: Run Tests and Deploy to PyPI

on:
  push:
    branches:
      - main

jobs:
  release:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Extract current version
        id: version
        run: |
          VERSION_FILE="nova_post/__init__.py"
          CURRENT_VERSION=$(grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' $VERSION_FILE)
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
          NEW_VERSION="$MAJOR.$MINOR.$((PATCH + 1))"
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "New version: $NEW_VERSION"

      - name: Update version in __init__.py
        run: |
          VERSION_FILE="nova_post/__init__.py"
          sed -i "s/__version__ = \"$CURRENT_VERSION\"/__version__ = \"$NEW_VERSION\"/" $VERSION_FILE

      - name: Commit and push new version
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add nova_post/__init__.py
          git commit -m "Bump version to $NEW_VERSION"
          git push origin main

      - name: Build and publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m build
          twine upload dist/*
